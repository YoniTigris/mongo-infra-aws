- name: Debian/Ubuntu, install MongoDB Enterprise dependencies via apt
  become: true
  become_user: root
  apt:
    name: "{{ packages }}"
    state: present
    update_cache: yes
  vars:
    packages:
        - libcurl3-gnutls
        - libcurl4
        - libgssapi-krb5-2
        - libkrb5-dbg
        - libldap-2.4-2
        - libpci3
        - libsasl2-2
        - snmp
        - openssl
        - gnupg

- name: Debian/Ubuntu, add apt-key
  become: true
  become_user: root
  apt_key:
    url: https://www.mongodb.org/static/pgp/server-6.0.asc
    state: present
  when: version == "db_6_0_latest"

- name: Debian/Ubuntu, add apt repository
  become: true
  become_user: root
  apt_repository:
    repo: "deb [ arch=amd64,arm64,s390x ] http://repo.mongodb.com/apt/ubuntu focal/mongodb-enterprise/6.0 multiverse"
    state: present
    filename: mongodb-enerprise
    update_cache: yes
  when: version == "db_6_0_latest"

- name: Debian/Ubuntu, add apt-key
  become: true
  become_user: root
  apt_key:
    url: https://www.mongodb.org/static/pgp/server-7.0.asc
    state: present
  when: version == "db_7_0_latest"

- name: Debian/Ubuntu, add apt repository
  become: true
  become_user: root
  apt_repository:
    repo: "deb [ arch=amd64,arm64,s390x ] http://repo.mongodb.com/apt/ubuntu focal/mongodb-enterprise/7.0 multiverse"
    state: present
    filename: mongodb-enerprise
    update_cache: yes
  when: version == "db_7_0_latest"

- name: Debian/Ubuntu, install mongodb-enterprise
  become: true
  become_user: root
  apt:
    name: "{{ packages }}"
    state: present
    update_cache: yes
  vars:
    packages:
        - mongodb-enterprise

- name: mongod.conf bind to 0.0.0.0
  become: true
  become_user: root
  lineinfile:
    path: /etc/mongod.conf
    regexp: '^  bindIp: '
    line: '  bindIp: 0.0.0.0'

- name: mongod.conf enable replication 1
  become: true
  become_user: root
  lineinfile:
    path: /etc/mongod.conf
    regexp: '#replication:'
    line: 'replication:'
  vars:
    HOST_COUNT: "{{ groups['amd64_backing_appdb'] | length }}"
  when: "HOST_COUNT | int >= 3"

- name: mongod.conf enable replication 2
  become: true
  become_user: root
  lineinfile:
    path: /etc/mongod.conf
    line: '  replSetName: "amd64_backing_appdb"'
    insertafter: 'replication:'
  vars:
    HOST_COUNT: "{{ groups['amd64_backing_appdb'] | length }}"
  when: "HOST_COUNT | int >= 3"

- name: Debian/Ubuntu, enable mongod service
  become: true
  become_user: root
  service:
    name: mongod
    enabled: yes

- name: Debian/Ubuntu, start mongod
  become: true
  become_user: root
  service: name=mongod state=started

- name: mongod.conf enable replication 3
  ansible.builtin.command: "mongo --eval 'rs.initiate()'"
  run_once: true
  delegate_to: "{{ groups['amd64_backing_appdb'].0 }}"
  vars:
    HOST_COUNT: "{{ groups['amd64_backing_appdb'] | length }}"
  when: "HOST_COUNT | int >= 3"
  
- name: mongod.conf enable replication 4
  command: mongo --eval 'rs.add("{{ item }}:27017")'
  delegate_to: "{{ groups['amd64_backing_appdb'].0 }}"
  run_once: true
  vars:
    HOST_COUNT: "{{ groups['amd64_backing_appdb'] | length }}"
  when: "HOST_COUNT | int >= 3"
  loop: "{{ amd64_backing_appdb }}"
