- name: Include ../../vars/om-vars.yaml written by terraform during deploy
  include_vars:
    file: vars/om-vars.yaml

- name: Download .rpm
  get_url:
    url: "{{ om_url.0 }}/download/agent/automation/mongodb-mms-automation-agent-manager-latest.x86_64.rpm"
    dest: /home/centos/mongodb-agent.rpm
    mode: '0640'

- name: "Install MongoDB Enterprise dependencies via yum"
  become: yes
  become_user: root
  yum:
    name: "{{ packages }}"
    state: present
    update_cache: yes
  vars:
    packages:
        - cyrus-sasl
        - cyrus-sasl-gssapi
        - cyrus-sasl-plain
        - krb5-libs
        - libcurl
        - lm_sensors-libs
        - net-snmp
        - net-snmp-agent-libs
        - openldap
        - openssl
        - tcp_wrappers-libs
        - xz-libs

- name: "Install kerberos workstation"
  become: yes
  become_user: root
  yum:
    name: "{{ packages }}"
    state: present
    update_cache: yes
  vars:
    packages:
        - krb5-workstation
        - ipa-client
  when: kerberos == "true"

- name: create /etc/krb5.conf.d/idm.example.com.conf)
  become: yes
  become_user: root
  ansible.builtin.file:
    path: /etc/krb5.conf.d/idm.example.com.conf
    state: touch
    mode: u=rw,g=r,o=r
  when: kerberos == "true"

- name: Write our basic kerberos configuration
  become: yes
  become_user: root
  ansible.builtin.blockinfile:
    path: /etc/krb5.conf.d/idm.example.com.conf
    block: |
      [libdefaults]
      default_realm = IDM.EXAMPLE.COM

      [realms]
       IDM.EXAMPLE.COM = {
        kdc = {{services_private.0}}
        admin_server = {{services_private.0}}
       }

      [domain_realm]
       .idm.example.com = IDM.EXAMPLE.COM
       idm.example.com = IDM.EXAMPLE.COM
  when: kerberos == "true"

- name: Stop mongodb-mms-automation-agent.service if exists
  become: yes
  become_user: root
  shell: if systemctl is-enabled --quiet mongodb-mms-automation-agent; then systemctl stop mongodb-mms-automation-agent && echo stopped; fi
  register: output
  changed_when: "'stopped' in output.stdout"

- name: Install an .rpm package
  become: yes
  become_user: root
  yum:
    name: /home/centos/mongodb-agent.rpm
    state: present

- name: Replace agent settings
  become: yes
  become_user: root
  lineinfile:
    path: /etc/mongodb-mms/automation-agent.config
    regexp: '^mmsGroupId='
    line: mmsGroupId={{project_id}}

- name: Replace agent settings
  become: yes
  become_user: root
  lineinfile:
    path: /etc/mongodb-mms/automation-agent.config
    regexp: '^mmsApiKey='
    line: mmsApiKey={{api_key}}

- name: Replace agent settings
  become: yes
  become_user: root
  lineinfile:
    path: /etc/mongodb-mms/automation-agent.config
    regexp: '^mmsBaseUrl='
    line: mmsBaseUrl={{ om_url.0 }}

- name: stop saslauthd service
  become: yes
  become_user: root
  shell: if systemctl is-enabled --quiet saslauthd; then systemctl stop saslauthd && echo stopped; fi
  register: output
  changed_when: "'stopped' in output.stdout"
  when: saslauthd == "true"

- name: Configure saslauthd /etc/sysconfig/saslauthd
  become: yes
  become_user: root
  lineinfile:
    path: /etc/sysconfig/saslauthd
    regexp: '^MECH='
    line: MECH=ldap # modified by terraform
  when: saslauthd == "true"

- name: create /etc/saslauthd.conf
  become: yes
  become_user: root
  ansible.builtin.file:
    path: /etc/saslauthd.conf
    state: touch
    mode: u=rw,g=r,o=r
  when: saslauthd == "true"

- name: Configure saslauthd /etc/saslauthd.conf
  become: yes
  become_user: root
  blockinfile:
    path: /etc/saslauthd.conf
    block: |
      {{ item.setting }}: {{ item.value }}
    marker: "# Instance Parameter Overrides"
  loop:
    - { setting: ldap_servers, value: "ldap://{{services_private.0}}:389" }
    - { setting: ldap_mech, value: PLAIN }
    - { setting: ldap_search_base, value: 'cn=users,cn=accounts,dc=idm,dc=example,dc=com' }
    - { setting: ldap_filter, value: "(uid=%u)" }
    - { setting: ldap_bind_dn, value: "uid=admin,cn=users,cn=accounts,dc=idm,dc=example,dc=com" }
    - { setting: ldap_password, value: password }
  when: saslauthd == "true"

- name: Copy keytab file
  become: yes
  become_user: root
  copy:
    src: "{{ ansible_facts['hostname'] }}.eu-west-1.compute.internal.keytab"
    dest: /etc/krb5.keytab
  when: kerberos == "true"

- name: "Enable saslauthd service"
  become: yes
  become_user: root
  service:
    name: saslauthd
    enabled: yes

- name: "Start saslauthd service"
  become: yes
  become_user: root
  service: name=saslauthd state=started
  when: saslauthd == "true"

- name: Create data directory
  become: yes
  become_user: root
  file:
    path: /data
    state: directory
    recurse: yes
    owner: mongod
    group: mongod

- name: "Enable mongodb-mms-automation-agent service"
  become: yes
  become_user: root
  service:
    name: mongodb-mms-automation-agent
    enabled: yes

- name: "Start mongodb-mms-automation-agent service"
  become: yes
  become_user: root
  service: name=mongodb-mms-automation-agent state=started
